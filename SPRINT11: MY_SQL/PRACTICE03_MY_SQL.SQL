-- 01
SELECT DISTINCT CITY
FROM STATION
WHERE CITY NOT REGEXP '^[aeiouAEIOU]' OR CITY NOT REGEXP '[aeiouAEIOU]$';

-- 02
SELECT 
    DISTINCT CITY
FROM STATION
WHERE CITY NOT REGEXP '^[aeiouAEIOU]' AND CITY NOT REGEXP '[aeiouAEIOU]$';

-- 03
SELECT 
    NAME
FROM STUDENTS
WHERE MARKS > 75
ORDER BY RIGHT(NAME,3), ID;

-- 04
SELECT 
    NAME
FROM EMPLOYEE
ORDER BY NAME ASC;

-- 05 
SELECT 
    NAME
FROM EMPLOYEE
WHERE SALARY > 2000 AND MONTHS < 10
ORDER BY EMPLOYEE_ID ASC;

-- 06
SELECT
    CASE
        WHEN A+B <=C OR A+C <=B OR B+C <=A THEN 'Not A Triangle'
        WHEN A=B AND B=C THEN 'Equilateral'
        WHEN A=B OR B=C OR A=C THEN 'Isosceles'
        ELSE 'Scalene'
    END AS TRIANGLESSET
FROM TRIANGLES;

-- 07
SELECT
    last.employee_ID,
    employee.name
FROM employee_information AS employee
JOIN last_quarter_bonus AS last
ON employee.employee_ID = last.employee_ID
WHERE bonus >= 5000 AND division = 'HR';

-- 08
SELECT 
    COUNT(POPULATION)
FROM CITY
WHERE POPULATION > 100000;

-- 09
SELECT 
    SUM(POPULATION)
FROM CITY
WHERE DISTRICT = 'California';

-- 10
SELECT 
    AVG(POPULATION)
FROM CITY
WHERE DISTRICT = 'California';

-- 11
SELECT 
    FLOOR(AVG(POPULATION))
FROM CITY;

-- 12
SELECT 
    SUM(POPULATION)
FROM CITY
WHERE COUNTRYCODE = 'JPN';

-- 13
SELECT 
    MAX(POPULATION)-MIN(POPULATION)
FROM CITY;

-- 14
SELECT 
    CONCAT(NAME, '(', SUBSTRING(OCCUPATION, 1,1),')') AS NAME
FROM OCCUPATIONS
ORDER BY NAME
SELECT 
    CONCAT('THERE ARE A TOTAL OF', ' ', COUNT(OCCUPATION), ' ', 
    LOWER(OCCUPATION), 'S.') AS PROFESSION
FROM OCCUPATIONS
GROUP BY OCCUPATION
ORDER BY PROFESSION;

-- 15
SELECT 
    CONCAT(NAME, '(', SUBSTRING(OCCUPATION, 1,1),')') AS NAME
FROM OCCUPATIONS
ORDER BY NAME;

SELECT 
    CONCAT('There are a total of', ' ', COUNT(OCCUPATION), ' ', 
    LOWER(OCCUPATION), 's.') AS PROFESSION
FROM OCCUPATIONS
GROUP BY OCCUPATION;

WITH CTE AS
(
SELECT RANK() OVER(PARTITION BY OCCUPATION ORDER BY NAME) AS RNK,
    CASE WHEN OCCUPATION = 'Doctor' THEN NAME ELSE NULL END AS DOCTOR,
    CASE WHEN OCCUPATION = 'Professor' THEN NAME ELSE NULL END AS Professor,
    CASE WHEN OCCUPATION = 'Singer' THEN NAME ELSE NULL END AS Singer,
    CASE WHEN OCCUPATION = 'Actor' THEN NAME ELSE NULL END AS Actor
FROM CTE;
)
